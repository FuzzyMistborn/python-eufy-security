---
name: CI

on:
  pull_request:
    branches:
      - dev
      - master

  push:
    branches:
      - dev
      - master

jobs:
  test:
    name: Tests

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version:
          - "3.6"
          - "3.7"
          - "3.8"

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - run: |
          python -m pip install --upgrade pip poetry
          poetry install
          poetry run pytest tests/

  coverage:

    name: Test Coverage

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v1
        with:
          python-version: "3.x"
          architecture: x64

      - run: |
          python -m pip install --upgrade pip poetry
          poetry install
          poetry run pytest \
            -s \
            --verbose \
            --cov-report term-missing \
            --cov-report xml \
            --cov=eufy_security tests

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  lint:

    name: "Linting & Static Analysis"

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v1
        with:
          python-version: "3.x"
          architecture: x64

      - id: version
        run: echo "::set-output name=sha::$(python -VV | sha256sum | cut -d' ' -f1)"

      - uses: actions/cache@v1
        with:
          path: ~/.cache/pre-commit
          key: >
            pre-commit|${{ steps.version.outputs.sha }}|${{ hashFiles('.pre-commit-config.yaml') }}

      - run: |
          python -m pip install --upgrade pip poetry
          poetry install
          poetry run pre-commit install-hooks
          poetry run pre-commit run --all-files
