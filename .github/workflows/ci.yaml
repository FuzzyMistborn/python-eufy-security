---
name: CI

on:
  pull_request:
    branches:
      - dev
      - master

  push:
    branches:
      - dev
      - master

jobs:
  test:
    name: Tests

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version:
          - "3.6"
          - "3.7"
          - "3.8"

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - run: |
          python -m venv venv
          venv/bin/pip install -r requirements_test.txt
          venv/bin/py.test tests/

  coverage:

    name: Test Coverage

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v1
        with:
          python-version: "3.x"
          architecture: x64

      - run: |
          python -m venv venv
          venv/bin/pip install -r requirements_test.txt
          venv/bin/py.test -s --verbose --cov-report term-missing --cov-report xml --cov=eufy_security tests

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  lint:

    name: "Linting & Static Analysis"

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v1
        with:
          python-version: "3.x"
          architecture: x64

      - run: |
          python -m venv venv
          venv/bin/pip install pre-commit
          venv/bin/pre-commit install-hooks --config .pre-commit-config.yaml
          venv/bin/pre-commit run bandit --all-files
          venv/bin/pre-commit run black --all-files
          venv/bin/pre-commit run check-json --all-files
          venv/bin/pre-commit run codespell --all-files
          venv/bin/pre-commit run flake8 --all-files
          venv/bin/pre-commit run isort --all-files
          venv/bin/pre-commit run mypy --all-files
          venv/bin/pre-commit run pydocstyle --all-files
          shellcheck script/*
